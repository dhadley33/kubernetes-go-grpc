// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sas.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SASRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SASRequest) Reset()         { *m = SASRequest{} }
func (m *SASRequest) String() string { return proto.CompactTextString(m) }
func (*SASRequest) ProtoMessage()    {}
func (*SASRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5a18144dbb59b20, []int{0}
}

func (m *SASRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SASRequest.Unmarshal(m, b)
}
func (m *SASRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SASRequest.Marshal(b, m, deterministic)
}
func (m *SASRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SASRequest.Merge(m, src)
}
func (m *SASRequest) XXX_Size() int {
	return xxx_messageInfo_SASRequest.Size(m)
}
func (m *SASRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SASRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SASRequest proto.InternalMessageInfo

func (m *SASRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type SASResponse struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SASResponse) Reset()         { *m = SASResponse{} }
func (m *SASResponse) String() string { return proto.CompactTextString(m) }
func (*SASResponse) ProtoMessage()    {}
func (*SASResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5a18144dbb59b20, []int{1}
}

func (m *SASResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SASResponse.Unmarshal(m, b)
}
func (m *SASResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SASResponse.Marshal(b, m, deterministic)
}
func (m *SASResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SASResponse.Merge(m, src)
}
func (m *SASResponse) XXX_Size() int {
	return xxx_messageInfo_SASResponse.Size(m)
}
func (m *SASResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SASResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SASResponse proto.InternalMessageInfo

func (m *SASResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SASResponse) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *SASResponse) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func init() {
	proto.RegisterType((*SASRequest)(nil), "pb.SASRequest")
	proto.RegisterType((*SASResponse)(nil), "pb.SASResponse")
}

func init() { proto.RegisterFile("sas.proto", fileDescriptor_e5a18144dbb59b20) }

var fileDescriptor_e5a18144dbb59b20 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x4e, 0x2c, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xd2, 0xe0, 0xe2, 0x0a, 0x76, 0x0c,
	0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe2, 0xe2, 0x48, 0xcb, 0xcc, 0x49, 0xcd,
	0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x95, 0x22, 0xb9, 0xb8,
	0xc1, 0x2a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x84, 0xb8, 0x58, 0x4a, 0x2a, 0x0b, 0x60,
	0xca, 0xc0, 0x6c, 0x90, 0xf6, 0x9c, 0xfc, 0xe4, 0xc4, 0x92, 0xcc, 0xfc, 0x3c, 0x09, 0x26, 0x88,
	0x76, 0x18, 0x1f, 0xc5, 0x68, 0x66, 0x54, 0xa3, 0x8d, 0x2c, 0xc1, 0x8e, 0x08, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x15, 0xd2, 0xe6, 0x62, 0x0b, 0x2a, 0xcd, 0x0b, 0x76, 0x0c, 0x16, 0xe2, 0xd3,
	0x2b, 0x48, 0xd2, 0x43, 0x38, 0x4f, 0x8a, 0x1f, 0xce, 0x87, 0x38, 0x42, 0x89, 0x21, 0x89, 0x0d,
	0xec, 0x15, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x6e, 0x10, 0xa7, 0xd7, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SASServiceClient is the client API for SASService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SASServiceClient interface {
	RunSAS(ctx context.Context, in *SASRequest, opts ...grpc.CallOption) (*SASResponse, error)
}

type sASServiceClient struct {
	cc *grpc.ClientConn
}

func NewSASServiceClient(cc *grpc.ClientConn) SASServiceClient {
	return &sASServiceClient{cc}
}

func (c *sASServiceClient) RunSAS(ctx context.Context, in *SASRequest, opts ...grpc.CallOption) (*SASResponse, error) {
	out := new(SASResponse)
	err := c.cc.Invoke(ctx, "/pb.SASService/RunSAS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SASServiceServer is the server API for SASService service.
type SASServiceServer interface {
	RunSAS(context.Context, *SASRequest) (*SASResponse, error)
}

// UnimplementedSASServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSASServiceServer struct {
}

func (*UnimplementedSASServiceServer) RunSAS(ctx context.Context, req *SASRequest) (*SASResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunSAS not implemented")
}

func RegisterSASServiceServer(s *grpc.Server, srv SASServiceServer) {
	s.RegisterService(&_SASService_serviceDesc, srv)
}

func _SASService_RunSAS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SASRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SASServiceServer).RunSAS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SASService/RunSAS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SASServiceServer).RunSAS(ctx, req.(*SASRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SASService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SASService",
	HandlerType: (*SASServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RunSAS",
			Handler:    _SASService_RunSAS_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sas.proto",
}
