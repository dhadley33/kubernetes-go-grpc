// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wiki.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WikiRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WikiRequest) Reset()         { *m = WikiRequest{} }
func (m *WikiRequest) String() string { return proto.CompactTextString(m) }
func (*WikiRequest) ProtoMessage()    {}
func (*WikiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c56f90469cec0af, []int{0}
}

func (m *WikiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WikiRequest.Unmarshal(m, b)
}
func (m *WikiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WikiRequest.Marshal(b, m, deterministic)
}
func (m *WikiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WikiRequest.Merge(m, src)
}
func (m *WikiRequest) XXX_Size() int {
	return xxx_messageInfo_WikiRequest.Size(m)
}
func (m *WikiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WikiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WikiRequest proto.InternalMessageInfo

func (m *WikiRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *WikiRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *WikiRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type WikiResponse struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Output               string   `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WikiResponse) Reset()         { *m = WikiResponse{} }
func (m *WikiResponse) String() string { return proto.CompactTextString(m) }
func (*WikiResponse) ProtoMessage()    {}
func (*WikiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c56f90469cec0af, []int{1}
}

func (m *WikiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WikiResponse.Unmarshal(m, b)
}
func (m *WikiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WikiResponse.Marshal(b, m, deterministic)
}
func (m *WikiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WikiResponse.Merge(m, src)
}
func (m *WikiResponse) XXX_Size() int {
	return xxx_messageInfo_WikiResponse.Size(m)
}
func (m *WikiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WikiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WikiResponse proto.InternalMessageInfo

func (m *WikiResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *WikiResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *WikiResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *WikiResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type SaveRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveRequest) Reset()         { *m = SaveRequest{} }
func (m *SaveRequest) String() string { return proto.CompactTextString(m) }
func (*SaveRequest) ProtoMessage()    {}
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c56f90469cec0af, []int{2}
}

func (m *SaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveRequest.Unmarshal(m, b)
}
func (m *SaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveRequest.Marshal(b, m, deterministic)
}
func (m *SaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveRequest.Merge(m, src)
}
func (m *SaveRequest) XXX_Size() int {
	return xxx_messageInfo_SaveRequest.Size(m)
}
func (m *SaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveRequest proto.InternalMessageInfo

func (m *SaveRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *SaveRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *SaveRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type SaveResponse struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveResponse) Reset()         { *m = SaveResponse{} }
func (m *SaveResponse) String() string { return proto.CompactTextString(m) }
func (*SaveResponse) ProtoMessage()    {}
func (*SaveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c56f90469cec0af, []int{3}
}

func (m *SaveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveResponse.Unmarshal(m, b)
}
func (m *SaveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveResponse.Marshal(b, m, deterministic)
}
func (m *SaveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveResponse.Merge(m, src)
}
func (m *SaveResponse) XXX_Size() int {
	return xxx_messageInfo_SaveResponse.Size(m)
}
func (m *SaveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveResponse proto.InternalMessageInfo

func (m *SaveResponse) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *SaveResponse) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *SaveResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*WikiRequest)(nil), "pb.WikiRequest")
	proto.RegisterType((*WikiResponse)(nil), "pb.WikiResponse")
	proto.RegisterType((*SaveRequest)(nil), "pb.SaveRequest")
	proto.RegisterType((*SaveResponse)(nil), "pb.SaveResponse")
}

func init() { proto.RegisterFile("wiki.proto", fileDescriptor_5c56f90469cec0af) }

var fileDescriptor_5c56f90469cec0af = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x51, 0x3d, 0x4f, 0xc3, 0x40,
	0x0c, 0x6d, 0x4b, 0x29, 0xe0, 0x56, 0x02, 0x59, 0x08, 0x45, 0x9d, 0xd0, 0x4d, 0x4c, 0x37, 0xc0,
	0x2f, 0xe0, 0x27, 0xd0, 0x0c, 0x08, 0xb6, 0x5c, 0x6b, 0x24, 0xab, 0x69, 0xee, 0x68, 0x9c, 0xa2,
	0xfe, 0x7b, 0x74, 0x1f, 0x0d, 0x37, 0x64, 0x60, 0xe8, 0x76, 0xcf, 0x7e, 0xf7, 0xde, 0xb3, 0x0d,
	0xf0, 0xc3, 0x5b, 0xd6, 0x6e, 0x6f, 0xc5, 0xe2, 0xc4, 0x19, 0xf5, 0x01, 0xf3, 0x77, 0xde, 0xf2,
	0x8a, 0xbe, 0x3b, 0x6a, 0x05, 0x97, 0x70, 0xfd, 0xc5, 0x35, 0x35, 0xd5, 0x8e, 0x8a, 0xf1, 0xe3,
	0xf8, 0xe9, 0x66, 0xd5, 0x63, 0xdf, 0xab, 0xed, 0xba, 0x12, 0xb6, 0x4d, 0x31, 0x89, 0xbd, 0x13,
	0x46, 0x84, 0xa9, 0x1c, 0x1d, 0x15, 0x17, 0xa1, 0x1e, 0xde, 0x6a, 0x03, 0x8b, 0x28, 0xdd, 0x3a,
	0xdb, 0xb4, 0x84, 0xf7, 0x70, 0x29, 0x2c, 0xf5, 0x49, 0x38, 0x02, 0xff, 0xd3, 0xd8, 0xcd, 0x31,
	0x29, 0x86, 0x37, 0x3e, 0xc0, 0xcc, 0x76, 0xe2, 0x3a, 0x49, 0x7a, 0x09, 0xf5, 0x2e, 0xd3, 0xcc,
	0xe5, 0x0d, 0xe6, 0x65, 0x75, 0xa0, 0xff, 0x0c, 0x30, 0x64, 0x35, 0x14, 0xfc, 0x13, 0x16, 0x51,
	0x32, 0x05, 0x3f, 0xe3, 0x52, 0x9e, 0x77, 0x71, 0xdf, 0x25, 0xed, 0x0f, 0xbc, 0x26, 0xd4, 0x70,
	0x15, 0xe0, 0x6b, 0x89, 0xb7, 0xda, 0x19, 0x9d, 0xdd, 0x62, 0x79, 0xf7, 0x57, 0x88, 0x41, 0xd4,
	0xc8, 0xf3, 0x7d, 0xb4, 0x9e, 0x9f, 0x8d, 0x1e, 0xf9, 0x79, 0x70, 0x35, 0x32, 0xb3, 0x70, 0xe9,
	0x97, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x40, 0xc8, 0x6d, 0xf7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WikiServiceClient is the client API for WikiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WikiServiceClient interface {
	WikiSAS(ctx context.Context, in *WikiRequest, opts ...grpc.CallOption) (*WikiResponse, error)
	SaveSAS(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveResponse, error)
}

type wikiServiceClient struct {
	cc *grpc.ClientConn
}

func NewWikiServiceClient(cc *grpc.ClientConn) WikiServiceClient {
	return &wikiServiceClient{cc}
}

func (c *wikiServiceClient) WikiSAS(ctx context.Context, in *WikiRequest, opts ...grpc.CallOption) (*WikiResponse, error) {
	out := new(WikiResponse)
	err := c.cc.Invoke(ctx, "/pb.WikiService/WikiSAS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wikiServiceClient) SaveSAS(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveResponse, error) {
	out := new(SaveResponse)
	err := c.cc.Invoke(ctx, "/pb.WikiService/SaveSAS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WikiServiceServer is the server API for WikiService service.
type WikiServiceServer interface {
	WikiSAS(context.Context, *WikiRequest) (*WikiResponse, error)
	SaveSAS(context.Context, *SaveRequest) (*SaveResponse, error)
}

// UnimplementedWikiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWikiServiceServer struct {
}

func (*UnimplementedWikiServiceServer) WikiSAS(ctx context.Context, req *WikiRequest) (*WikiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WikiSAS not implemented")
}
func (*UnimplementedWikiServiceServer) SaveSAS(ctx context.Context, req *SaveRequest) (*SaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveSAS not implemented")
}

func RegisterWikiServiceServer(s *grpc.Server, srv WikiServiceServer) {
	s.RegisterService(&_WikiService_serviceDesc, srv)
}

func _WikiService_WikiSAS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WikiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WikiServiceServer).WikiSAS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WikiService/WikiSAS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WikiServiceServer).WikiSAS(ctx, req.(*WikiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WikiService_SaveSAS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WikiServiceServer).SaveSAS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WikiService/SaveSAS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WikiServiceServer).SaveSAS(ctx, req.(*SaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WikiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.WikiService",
	HandlerType: (*WikiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WikiSAS",
			Handler:    _WikiService_WikiSAS_Handler,
		},
		{
			MethodName: "SaveSAS",
			Handler:    _WikiService_SaveSAS_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wiki.proto",
}
